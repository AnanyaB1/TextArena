""" TODO """


import openai, os


class HumanAgent:
    def __init__(self, model_name: str):
        self.agent_identifier = model_name 

    def __call__(self, observation: str) -> str:
        print(observation)
        return input("Please enter the action: ")

class GPTAgent:
    def __init__(self, model_name: str):
        """
        Initialize the GPTAgent with the specified OpenAI model.
        
        Args:
            model_name (str): The name of the OpenAI model to use (e.g., "gpt-4").
        """
        self.model_name = model_name
        self.agent_identifier = model_name
        # Load the OpenAI API key from environment variable
        openai.api_key = os.getenv("OPENAI_API_KEY")
        if not openai.api_key:
            raise ValueError("OpenAI API key not found. Please set the OPENAI_API_KEY environment variable.")
    
    def __call__(self, observation: str) -> str:
        """
        Process the observation using the OpenAI model and return the action.
        
        Args:
            observation (str): The input string to process.
        
        Returns:
            str: The response generated by the model.
        """
        # try:
        response = openai.ChatCompletion.create(
            model=self.model_name,
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": observation}
            ],
            max_tokens=150,
            n=1,
            stop=None,
            temperature=0.7,
        )
        # Extract the assistant's reply
        action = response.choices[0].message['content'].strip()
        return action
        # except Exception as e:
        #     return f"An error occurred: {e}"